--- # SMACHA script for dual-arm block stacking for the Baxter simulator.
name: sm
template: BaxterBase
node_name: baxter_smach_pick_and_place_test
outcomes: [succeeded, aborted, preempted]
userdata:
  overhead_orientation: [-0.02496, 0.99965, 0.00738, 0.00486]
  hover_offset: [[0.0, 0.0, 0.15], [0.0, 0.0, 0.0, 0.0]]
states:
  - LOAD_TABLE_MODEL:
      template: LoadGazeboModelState
      model_name: cafe_table
      model_path: rospkg.RosPack().get_path('baxter_sim_examples')+'/models/cafe_table/model.sdf'
      userdata:
        table_model_pose_world: Pose(position=Point(x=1.0, y=0.0, z=0.0))
        table_model_ref_frame: world
      remapping: {pose: table_model_pose_world, reference_frame: table_model_ref_frame}
      transitions: {succeeded: LOAD_BLOCK_MODEL_1}

  - LOAD_BLOCK_MODEL_1:
      template: LoadGazeboModelState
      model_name: block_1
      model_path: rospkg.RosPack().get_path('baxter_sim_examples')+'/models/block/model.urdf'
      userdata: 
        block_model_1_pose_world: [[0.6725, 0.1265, 0.7825], [0.0, 0.0, 0.0, 0.0]]
        block_model_1_ref_frame: world
        block_model_1_pick_pose: [[0.7, 0.15, -0.129], [-0.02496, 0.99965, 0.00738, 0.00486]]
        block_model_1_place_pose: [[0.75, 0.0, -0.129], [-0.02496, 0.99965, 0.00738, 0.00486]]
      remapping: {pose: block_model_1_pose_world, reference_frame: block_model_1_ref_frame}
      transitions: {succeeded: LOAD_BLOCK_MODEL_2}
  
  - LOAD_BLOCK_MODEL_2:
      template: LoadGazeboModelState
      model_name: block_2
      model_path: rospkg.RosPack().get_path('baxter_sim_examples')+'/models/block/model.urdf'
      userdata: 
        block_model_2_pose_world: [[0.7725, 0.1265, 0.7825], [0.0, 0.0, 0.0, 0.0]]
        block_model_2_ref_frame: world
        block_model_2_pick_pose: [[0.8, 0.15, -0.129], [-0.02496, 0.99965, 0.00738, 0.00486]]
        block_model_2_place_pose: [[0.75, 0.0, -0.049], [-0.02496, 0.99965, 0.00738, 0.00486]]
      remapping: {pose: block_model_2_pose_world, reference_frame: block_model_2_ref_frame}
      transitions: {succeeded: MOVE_LIMBS_TO_START_POSITIONS}

  - MOVE_LIMBS_TO_START_POSITIONS:
      template: Concurrence
      outcomes: [succeeded, aborted, preempted]
      default_outcome: succeeded
      outcome_map: {succeeded: {MOVE_LEFT_LIMB_TO_START_POSITION: succeeded,
                                MOVE_RIGHT_LIMB_TO_START_POSITION: succeeded}}
      transitions: {succeeded: succeeded}
      states: 
        - MOVE_LEFT_LIMB_TO_START_POSITION:
            template: MoveToJointPositionsState
            limb: left
            userdata: {left_limb_joint_start_positions: [-0.08000, -0.99998, -1.18997, 1.94002, 0.67000, 1.03001, -0.50000]}
            remapping: {positions: left_limb_joint_start_positions}
            # transitions: {succeeded: succeeded}
          
        - MOVE_RIGHT_LIMB_TO_START_POSITION:
            template: MoveToJointPositionsState
            limb: right
            userdata: {right_limb_joint_start_positions: [0.08000, -0.99998, 1.18997, 1.94002, -0.67000, 1.03001, 0.50000]}
            remapping: {positions: right_limb_joint_start_positions}
            # transitions: {succeeded: succeeded}

  # - PICK_AND_PLACE_BLOCK_1:
  #     script: pick_and_place_block
  #     remapping: {pick_pose: block_model_1_pick_pose, place_pose: block_model_1_place_pose, hover_offset: hover_offset}
  #     transitions: {succeeded: PICK_AND_PLACE_BLOCK_2}
  # 
  # - PICK_AND_PLACE_BLOCK_2:
  #     script: pick_and_place_block
  #     remapping: {pick_pose: block_model_2_pick_pose, place_pose: block_model_2_place_pose, hover_offset: hover_offset}
  #     transitions: {succeeded: succeeded}
